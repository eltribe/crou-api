// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/auth/join": {
            "post": {
                "description": "이메일, 비밀번호, 닉네임, 성별, 생년월일을 사용하여 회원가입합니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "회원가입 API",
                "parameters": [
                    {
                        "description": "Register User Request",
                        "name": "messages.RegisterUserRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/messages.RegisterUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/messages.RegisterUserResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errorcode.UseCaseError"
                        }
                    }
                }
            }
        },
        "/v1/auth/login": {
            "post": {
                "description": "이메일과 비밀번호를 사용하여 로그인합니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "로그인 API",
                "parameters": [
                    {
                        "description": "Login Request",
                        "name": "messages.LoginRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/messages.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/messages.LoginResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errorcode.UseCaseError"
                        }
                    }
                }
            }
        },
        "/v1/routines": {
            "get": {
                "description": "Get routines by user ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "데일리 루틴"
                ],
                "summary": "Get Routines API",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/messages.RoutineResponse"
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errorcode.UseCaseError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new routine.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "데일리 루틴"
                ],
                "summary": "Create Routine API",
                "parameters": [
                    {
                        "description": "Create Routine Request",
                        "name": "messages.CreateRoutineRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/messages.CreateRoutineRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/messages.RoutineResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errorcode.UseCaseError"
                        }
                    }
                }
            }
        },
        "/v1/routines/record/{id}": {
            "delete": {
                "description": "Delete a routine record by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "데일리 루틴"
                ],
                "summary": "Delete Routine Record API",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Routine Record ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Delete Routine Record Request",
                        "name": "messages.DeleteRoutineRecordRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/messages.DeleteRoutineRecordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errorcode.UseCaseError"
                        }
                    }
                }
            }
        },
        "/v1/routines/{id}": {
            "put": {
                "description": "Update an existing routine.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "데일리 루틴"
                ],
                "summary": "Update Routine API",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Routine ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Routine Request",
                        "name": "messages.UpdateRoutineRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/messages.UpdateRoutineRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/messages.RoutineResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errorcode.UseCaseError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a routine by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "데일리 루틴"
                ],
                "summary": "Delete Routine API",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Routine ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errorcode.UseCaseError"
                        }
                    }
                }
            }
        },
        "/v1/routines/{id}/record": {
            "post": {
                "description": "Write a record for a routine.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "데일리 루틴"
                ],
                "summary": "Write Routine Record API",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Routine ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Write Routine Record Request",
                        "name": "messages.WriteRoutineRecordRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/messages.WriteRoutineRecordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/messages.RoutineRecordResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errorcode.UseCaseError"
                        }
                    }
                }
            }
        },
        "/v1/user/profile": {
            "get": {
                "description": "JWT 기반 유저정보를 조회합니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "유저정보"
                ],
                "summary": "유저 정보 조회  API",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/messages.User"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "crou-api_internal_domains.OauthType": {
            "type": "string",
            "enum": [
                "GOOGLE",
                "NAVER"
            ],
            "x-enum-varnames": [
                "GOOGLE",
                "NAVER"
            ]
        },
        "crou-api_internal_domains.RoutineCategory": {
            "type": "string",
            "enum": [
                "SIGNATURE",
                "FAITH",
                "DAILY"
            ],
            "x-enum-varnames": [
                "SIGNATURE",
                "FAITH",
                "DAILY"
            ]
        },
        "crou-api_internal_domains.RoutineType": {
            "type": "string",
            "enum": [
                "BIBLE_TALK",
                "CHECK",
                "WRITE"
            ],
            "x-enum-varnames": [
                "BIBLE_TALK",
                "CHECK",
                "WRITE"
            ]
        },
        "crou-api_internal_domains.TimeOfDay": {
            "type": "string",
            "enum": [
                "MORNING",
                "AFTERNOON",
                "EVENING"
            ],
            "x-enum-varnames": [
                "MORNING",
                "AFTERNOON",
                "EVENING"
            ]
        },
        "errorcode.UseCaseError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "errorCode": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "messages.CreateRoutineRequest": {
            "type": "object",
            "required": [
                "category",
                "daysOfWeek",
                "routineType",
                "timeOfDay",
                "title",
                "when"
            ],
            "properties": {
                "category": {
                    "enum": [
                        "SIGNATURE",
                        "FAITH",
                        "DAILY"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/crou-api_internal_domains.RoutineCategory"
                        }
                    ]
                },
                "daysOfWeek": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "isNotification": {
                    "type": "boolean"
                },
                "notificationTime": {
                    "type": "integer"
                },
                "routineType": {
                    "enum": [
                        "BIBLE_TALK",
                        "CHECK",
                        "WRITE"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/crou-api_internal_domains.RoutineType"
                        }
                    ]
                },
                "timeOfDay": {
                    "enum": [
                        "MORNING",
                        "AFTERNOON",
                        "EVENING"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/crou-api_internal_domains.TimeOfDay"
                        }
                    ]
                },
                "title": {
                    "type": "string"
                },
                "when": {
                    "type": "string"
                }
            }
        },
        "messages.DeleteRoutineRecordRequest": {
            "type": "object",
            "required": [
                "routineRecordId"
            ],
            "properties": {
                "routineRecordId": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "messages.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 100
                },
                "password": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 8
                }
            }
        },
        "messages.LoginResponse": {
            "type": "object",
            "properties": {
                "expiresIn": {
                    "type": "integer"
                },
                "refreshToken": {
                    "type": "string"
                },
                "refreshTokenExpiresIn": {
                    "type": "integer"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "messages.RegisterUserRequest": {
            "type": "object",
            "required": [
                "birth",
                "email",
                "gender",
                "nickname",
                "password"
            ],
            "properties": {
                "birth": {
                    "type": "integer",
                    "maximum": 21000101,
                    "minimum": 19000101
                },
                "email": {
                    "type": "string",
                    "maxLength": 100
                },
                "gender": {
                    "type": "string",
                    "enum": [
                        "M",
                        "F"
                    ]
                },
                "nickname": {
                    "type": "string",
                    "maxLength": 20
                },
                "password": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 8
                }
            }
        },
        "messages.RegisterUserResponse": {
            "type": "object",
            "properties": {
                "birth": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "messages.RoutineRecordResponse": {
            "type": "object",
            "properties": {
                "isRecord": {
                    "type": "boolean"
                },
                "recordContent": {
                    "type": "string"
                }
            }
        },
        "messages.RoutineResponse": {
            "type": "object",
            "properties": {
                "category": {
                    "$ref": "#/definitions/crou-api_internal_domains.RoutineCategory"
                },
                "daysOfWeek": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/time.Weekday"
                    }
                },
                "id": {
                    "type": "string"
                },
                "isNotification": {
                    "type": "boolean"
                },
                "notificationTime": {
                    "type": "integer"
                },
                "routineType": {
                    "$ref": "#/definitions/crou-api_internal_domains.RoutineType"
                },
                "timeOfDay": {
                    "$ref": "#/definitions/crou-api_internal_domains.TimeOfDay"
                },
                "title": {
                    "type": "string"
                },
                "when": {
                    "type": "string"
                }
            }
        },
        "messages.UpdateRoutineRequest": {
            "type": "object",
            "required": [
                "category",
                "daysOfWeek",
                "routineType",
                "timeOfDay",
                "title",
                "when"
            ],
            "properties": {
                "category": {
                    "enum": [
                        "SIGNATURE",
                        "FAITH",
                        "DAILY"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/crou-api_internal_domains.RoutineCategory"
                        }
                    ]
                },
                "daysOfWeek": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "isNotification": {
                    "type": "boolean"
                },
                "notificationTime": {
                    "type": "integer"
                },
                "routineType": {
                    "enum": [
                        "BIBLE_TALK",
                        "CHECK",
                        "WRITE"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/crou-api_internal_domains.RoutineType"
                        }
                    ]
                },
                "timeOfDay": {
                    "enum": [
                        "MORNING",
                        "AFTERNOON",
                        "EVENING"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/crou-api_internal_domains.TimeOfDay"
                        }
                    ]
                },
                "title": {
                    "type": "string"
                },
                "when": {
                    "type": "string"
                }
            }
        },
        "messages.User": {
            "type": "object",
            "properties": {
                "nickname": {
                    "type": "string"
                },
                "notificationCount": {
                    "type": "integer"
                },
                "oauthEmail": {
                    "type": "string"
                },
                "oauthSub": {
                    "type": "string"
                },
                "oauthType": {
                    "$ref": "#/definitions/crou-api_internal_domains.OauthType"
                },
                "taste": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "messages.WriteRoutineRecordRequest": {
            "type": "object",
            "properties": {
                "day": {
                    "type": "integer"
                },
                "month": {
                    "type": "integer"
                },
                "recordContent": {
                    "type": "string"
                },
                "routineId": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "time.Weekday": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6
            ],
            "x-enum-varnames": [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday"
            ]
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "CROU API documentation",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
